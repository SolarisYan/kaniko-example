sudo: required

# This moves Kubernetes specific config files.
env:
- CHANGE_MINIKUBE_NONE_USER=true
- MINIKUBE_HOME=$HOME

before_script:
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- ls
- cd .minikube | pwd
- cd ..
- cd .minikube | pwd
- cd ..
- cd .minikube | pwd
- cd ..
- cd .minikube | pwd
- cd ..
- cd .minikube | pwd
- cd ..
- cd .minikube | pwd
- sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

script:
- kubectl create secret docker-registry regcred --docker-server=https://index.docker.io/v1/ --docker-username=debuggy --docker-password=${DOCKERHUB_PWD}
- kubectl create -f volume.yml
- kubectl create -f volume-claim.yml
- kubectl create -f pod.yml
- kubectl logs kaniko

after_script:
- docker run -it debuggy/dockertest